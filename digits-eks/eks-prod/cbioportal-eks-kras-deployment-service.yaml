apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "4"
  creationTimestamp: null
  generation: 1
  labels:
    run: eks-kras
  name: eks-kras
  selfLink: /apis/extensions/v1beta1/namespaces/default/deployments/eks-kras
spec:
  replicas: 1
  selector:
    matchLabels:
      run: eks-kras
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: eks-kras
    spec:
      volumes:
      - name: kras-eks-configmap-volume
        configMap:
          name: cbioportal-kras-kc
          items:
          - key: portal.properties
            path: portal.properties
          - key: kras-cbioportal-saml-idp-metadata.xml
            path: kras-cbioportal-saml-idp-metadata.xml
          - key: cbioportal-saml-keystore.jks
            path: cbioportal-saml-keystore.jks
      containers:
      - envFrom:
        - configMapRef:
            name: kras-eks
        env:
        - name: PORTAL_HOME
          value: /cbioportal/
        image: cbioportal/cbioportal:3.7.4-redis-web-shenandoah
        volumeMounts:
        - name: kras-eks-configmap-volume
          mountPath: /cbioportal/portal.properties
          subPath: portal.properties
        - name: kras-eks-configmap-volume
          mountPath: /cbioportal/kras-cbioportal-saml-idp-metadata.xml
          subPath: kras-cbioportal-saml-idp-metadata.xml
        - name: kras-eks-configmap-volume
          mountPath: /cbioportal/cbioportal-saml-keystore.jks
          subPath: cbioportal-saml-keystore.jks
        command: [ "/usr/bin/java" ]
        args: [
            # from https://developers.redhat.com/blog/2017/04/04/openjdk-and-containers/
            "-Xms100m",
            "-Xmx15g",
            "-XX:+UnlockExperimentalVMOptions",
            "-XX:+UseShenandoahGC",
            "-XX:ShenandoahUncommitDelay=1000",
            "-XX:ShenandoahGuaranteedGCInterval=10000",
            #"-XX:+AlwaysPreTouch",
            #"-XX:+UseTransparentHugePages",
            #"-XX:+UseNUMA",
            #"-XX:+PrintGCDetails",
            #"-XX:+UseParallelGC",
            #"-XX:+PrintGCDateStamps",
            #"-XX:ParallelGCThreads=4",
            #"-XX:+UseG1GC",
            #"-XX:+AggressiveHeap",
            # non aggressive garbage collection
            #"-XX:MinHeapFreeRatio=20",
            #"-XX:MaxHeapFreeRatio=40",
            #"-XX:GCTimeRatio=19",
            #"-XX:AdaptiveSizePolicyWeight=90",
            # This issue says to use maxRAMFraction > 1
            # https://github.com/akka/akka/issues/23499, but haven't found this
            # to work v well
            #"-XX:MaxRAMFraction=1",
            "-XX:+PrintFlagsFinal",
            "-XshowSettings:vm",
            # need to set MaxRAM, somehow the MaxRAMFraction is not picked up
            # from the limits
            #"-XX:MaxRAM=6500m",
            # enable remote debug
            "-Dabout=about_us.html",
            "-Dfaq=faq.html",
            "-Dnews=news.html",
            "-Dfilter_groups_by_appname=false",
            "-Dcom.sun.management.jmxremote.rmi.port=8849",
            "-Dcom.sun.management.jmxremote=false",
            "-Dcom.sun.management.jmxremote.port=8849",
            "-Dcom.sun.management.jmxremote.ssl=false",
            "-Dcom.sun.management.jmxremote.authenticate=false",
            "-Dcom.sun.management.jmxremote.local.only=false",
            "-Djava.rmi.server.hostname=localhost",
            "-Dquick_search.enabled=false",
            "-Dskin.footer=",
            "-Dskin.right_nav.whats_new_blurb=",
            "-Dskin.example_study_queries=tcga pancancer atlas\ntcga -legacy -pancancer\ntcga or icgc\nmsk-impact\n-\"cell line\"\nbreast\nesophageal OR stomach\nprostate msk\nserous",
            "-Dpriority_studies=",
            "-Dskin.patientview.filter_genes_profiled_all_samples=false",
            "-Dinstallation_map_url=https://installationmap.netlify.app/",
            "-Dapp.name=eks-kras",
            # connecting over dbcp
            "-Ddbconnector=dbcp",
            "-Dauthenticate=saml",
            "-Dauthorization=false",
            "-Ddb.user=$(DB_USER)",
            "-Ddb.password=$(DB_PASSWORD)",
            "-Ddb.host=$(DB_HOST)",
            "-Ddb.connection_string=$(DB_CONNECTION_STRING)",
            "-Ddb.portal_db_name=cgds_gdac",
            "-Ddb.suppress_schema_version_mismatch_errors=true",
            #"-Dtomcat.catalina.scope=runtime",
            "-Dshow.transcript_dropdown=true",
            "-Dshow.civic=$(SHOW_CIVIC)",
            "-Dskin.show_tweet_button=$(SKIN_SHOW_TWEET_BUTTON)",
            "-Dskin.email_contact=cbioportal@googlegroups.com",
            "-Dskin.data_sets_footer=",
            "-Dskin.data_sets_header=The portal currently contains data from <NUM_CANCER_STUDIES> cancer genomics studies.  The table below lists the number of available samples per cancer study and data type.",
            "-Dskin.examples_right_column_html=<a href=\"ln?q=KRAS:MUT\">KRAS mutations across lung cancer studies</a>",
            "-Dskin.right_logo=su2c-kras.png",
            "-Dskin.right_nav.show_testimonials=true",
            "-Dskin.title=Targeting KRAS Mutant Lung Cancers",
            "-Dskin.authorization_message=This instance of cBioPortal is currently only open to investigators involved in the SU2C KRAS Lung cancer Dream Team. All others please go to <a href=\"http://cbioportal.org\">cBioPortal.org</a> to browse and analyze publicly available su2c cancer data.  [<a href=\"https://docs.google.com/spreadsheet/viewform?formkey=dHpnWDRyT3pkUGtsOEp3V0c5N2lKVHc6MA#gid=0\">Request Access</a>].",
            "-Dskin.blurb=This portal contains genomic data from several published and unpublished lung cancer studies. <p><b>Please cite</b> <a href=\"http://www.ncbi.nlm.nih.gov/pubmed/23550210\">Gao et al. <i>Sci. Signal.</i> 2013</a> &amp;  <a href=\"http://cancerdiscovery.aacrjournals.org/content/2/5/401.abstract\"> Cerami et al. <i>Cancer Discov.</i> 2012</a> when publishing results based on cBioPortal.",
            "-Dshow.mdacc.heatmap=true",
            "-Dsession.service.url=https://session-service.cbioportal.aws.mskcc.org/api/sessions/kras_portal/",
            "-Dsession.service.origin=*",
            "-Dsession.service.user=$(SESSION_SERVICE_USER_NAME)",
            "-Dsession.service.password=$(SESSION_SERVICE_USER_PASSWORD)",
            "-Dgoogle_analytics_profile_id=$(GOOGLE_ANALYTICS_PROFILE_ID)",
            "-Dgoogleplus.consumer.key=$(GOOGLE_PLUS_CONSUMER_KEY)",
            "-Dgoogleplus.consumer.secret=$(GOOGLE_PLUS_CONSUMER_SECRET)",
            "-Dmicrosoftlive.consumer.key=$(MICROSOFT_LIVE_CONSUMER_KEY)",
            "-Dmicrosoftlive.consumer.secret=$(MICROSOFT_LIVE_CONSUMER_SECRET)",
            "-Dbitly.url=$(BITLY_URL)",
            "-Dbitly.access.token=$(BITLY_ACCESS_TOKEN)",
            "-Dsentry.dsn=$(SENTRY_DSN)",
            "-Dsentry.factory=org.cbioportal.logging.SentryClientFactory",
            #"-Dsentryjs.frontend_project_endpoint=$(SENTRY_FRONTEND_DSN)",
            "-Dsitemaps=true",
            "-Doncokb.public_api.url=https://www.oncokb.org/api/v1",
            "-Doncokb.token=$(ONCOKB_TOKEN)",
            "-Dgenomenexus.url=https://v1.genomenexus.org",
            "-Dmatchminer.url=http://ec2-54-158-52-176.compute-1.amazonaws.com:5555",
            "-Dmatchminer.token=$(MATCHMINER_TOKEN)",
            # cache settings (currently redis)
#            "-Dcache.statistics_endpoint_enabled=false",
            "-Dredis.database=6",
            "-Dpersistence.cache_type=redis",
            "-Dredis.leader_address=redis://cbioportal-persistence-redis-master:6379",
            "-Dredis.follower_address=redis://cbioportal-persistence-redis-master:6379",
            "-Dredis.password=$(REDIS_PASSWORD)",
            "-Dehcache.cache_type=none",
            "-Dcache.endpoint.api-key=$(CACHE_API_KEY)",
            "-Dcache.endpoint.enabled=true",
            "-Dredis.clear_on_startup=true",
            # misc frontend settings (this is NOT for backend persistence layer caching)
            "-Denable_persistent_cache=false",
            # compress on client side
            "-Denable_request_body_gzip_compression=true",
            "-jar",
            "/webapp-runner.jar",
            # this addresses same issue as
            # https://github.com/cBioPortal/cbioportal/issues/2328 one needs to
            # set this if one doesn't want to forward https -> http -> https
            # when logging in through google auth. Somehow this goes over http
            # otherwise.
            "--proxy-base-url",
            "https://kras.cbioportal.aws.mskcc.org:443",
            "--max-threads",
            "0",
            "--session-store",
            "redis",
            "--session-store-operation-timeout",
            "10000",
            # Fix long URL https://github.com/cBioPortal/cbioportal/issues/5836
            "-AmaxHttpHeaderSize=16384",
            "-AconnectionTimeout=20000",
            "--enable-compression",
            "--port",
            "8888",
            "/app.war"
        ]
        imagePullPolicy: Always
        readinessProbe:
          httpGet:
            path: /api/health
            port: 8888
          initialDelaySeconds: 45
          timeoutSeconds: 1
          periodSeconds: 5
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /
            port: 8888
          initialDelaySeconds: 180
          timeoutSeconds: 1
          periodSeconds: 12
          failureThreshold: 5
        name: eks-kras
        ports:
        - containerPort: 8888
          protocol: TCP
        - containerPort: 8849
          protocol: TCP
        resources:
          requests:
              memory: 2Gi
          limits:
              memory: 4Gi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      # run on big memory machine
      nodeSelector:
        eks.amazonaws.com/nodegroup: msk-cbioportal
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: eks-kras
  name: eks-kras
  selfLink: /api/v1/namespaces/default/services/eks-kras
spec:
  ports:
  - port: 80
    name: http
    targetPort: 8888
  selector:
    run: eks-kras
  type: ClusterIP
