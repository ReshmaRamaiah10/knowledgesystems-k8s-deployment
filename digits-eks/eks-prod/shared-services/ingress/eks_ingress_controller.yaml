apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: lazing-sloth
    meta.helm.sh/release-namespace: default
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
    service.beta.kubernetes.io/aws-load-balancer-internal: 0.0.0.0/0
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:us-east-1:666628074417:certificate/d2d67856-f3db-4ce1-b931-9dcba0ddda27
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: https
  creationTimestamp: "2024-06-28T19:03:53Z"
  finalizers:
  - service.kubernetes.io/load-balancer-cleanup
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: lazing-sloth
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.4
    helm.sh/chart: ingress-nginx-4.8.3
  name: lazing-sloth-ingress-nginx-controller
  namespace: default
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: 172.20.117.218
  clusterIPs:
  - 172.20.117.218
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: http
    nodePort: 31331
    port: 80
    protocol: TCP
    targetPort: http
  - name: https
    nodePort: 30238
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: lazing-sloth
    app.kubernetes.io/name: ingress-nginx
  sessionAffinity: None
  type: LoadBalancer
status:
  loadBalancer:
    ingress:
    - hostname: internal-ab65ed103ef98482c845ae69ae512cac-1693183256.us-east-1.elb.amazonaws.com
