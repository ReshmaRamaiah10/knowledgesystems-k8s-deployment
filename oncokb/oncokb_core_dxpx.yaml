apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "4"
  creationTimestamp: null
  generation: 1
  labels:
    run: oncokb-core-dxpx
  name: oncokb-core-dxpx
  namespace: oncokb
  selfLink: /apis/extensions/v1beta1/namespaces/oncokb/deployments/oncokb-core-dxpx
spec:
  replicas: 1
  selector:
    matchLabels:
      run: oncokb-core-dxpx
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: oncokb-core-dxpx
    spec:
      containers:
        - env:
          envFrom:
            - configMapRef:
                name: oncokb-core-dxpx
            - configMapRef:
                name: aws-cli-credentials
          image: oncokb/oncokb:2.10.0-dxpx.3
          command: ["java"]
          args: [
            # from https://developers.redhat.com/blog/2017/04/04/openjdk-and-containers/
            "-Xms250m",
            "-XX:+UseSerialGC",
            # aggressive garbage collection
            "-XX:MinHeapFreeRatio=20",
            "-XX:MaxHeapFreeRatio=40",
            "-XX:GCTimeRatio=4",
            "-XX:AdaptiveSizePolicyWeight=90",
            "-XX:+UnlockExperimentalVMOptions",
            "-XX:+UseCGroupMemoryLimitForHeap",
            # use maxRAMFraction > 1 https://github.com/akka/akka/issues/23499
            "-XX:MaxRAMFraction=2",
            "-XX:+PrintFlagsFinal",
            "-XshowSettings:vm",
            # need to set MaxRAM, somehow the MaxRAMFraction is not picked up
            # from the limits
            "-XX:MaxRAM=1024m",
            "-Djdbc.driverClassName=com.mysql.jdbc.Driver",
            "-Djdbc.url=jdbc:mysql://$(DB_HOST):3306/$(MYSQL_DATABASE)?useUnicode=yes&characterEncoding=UTF-8&useSSL=false",
            "-Djdbc.username=$(MYSQL_USER)",
            "-Djdbc.password=$(MYSQL_PASSWORD)",
            "-Ddata.version=v2.9",
            "-Ddata.version_date=11/13/2020",
            "-Dgenomenexus.api=https://www.genomenexus.org/",
            "-Daws.s3.accessKey=$(ACCESS_KEY_ID)",
            "-Daws.s3.secretKey=$(SECRET_ACCESS_KEY)",
            "-Daws.s3.region=$(AWS_REGION)",
            "-Doncokb_data.access_token=$(ONCOKB_DATA_ACCESS_TOKEN)",
            "-Dshow_sitemaps=false",
            "-jar",
            "/webapp-runner.jar",
            "--enable-compression",
            "--expand-war",
            "--port",
            "8888",
            "/app.war"
          ]
          imagePullPolicy: Always
          # use actionable variants endpoint to cache everything
          readinessProbe:
            httpGet:
              path: /api/v1/utils/allActionableVariants
              port: 8888
            initialDelaySeconds: 15
            timeoutSeconds: 10
            periodSeconds: 10
            failureThreshold: 20
          livenessProbe:
            httpGet:
              path: /api/v1/utils/allActionableVariants
              port: 8888
            # wait for the pod is ready
            initialDelaySeconds: 480
            timeoutSeconds: 10
            periodSeconds: 10
            failureThreshold: 5
          name: oncokb-core-dxpx
          ports:
            - containerPort: 8888
              protocol: TCP
          resources:
            requests:
              cpu: 500m
              memory: 1Gi
            limits:
              cpu: 4Gi
              memory: 2Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: oncokb-core-dxpx
  name: oncokb-core-dxpx
  namespace: oncokb
  selfLink: /api/v1/namespaces/oncokb/services/oncokb-core-dxpx
spec:
  ports:
    - port: 8888
  selector:
    run: oncokb-core-dxpx
  type: ClusterIP
