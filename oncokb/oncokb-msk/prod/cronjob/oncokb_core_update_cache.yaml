apiVersion: batch/v1
kind: CronJob
metadata:
  name: oncokb-cronjob-update-core-cache
spec:
  concurrencyPolicy: Forbid
  schedule: "*/5 * * * *"
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: patch-deployment
          containers:
          - name: main
            env:
            envFrom:
              - configMapRef:
                  name: oncokb-db-msk-prod-rds
            image: "oncokb/k8s-with-tools:0.0.1-alpha.3"
            command: [ "/bin/bash", "-c" ]
            args:
              - echo "Job Starts...";
                
                echo "Getting last data update...";
                LAST_DATA_UPDATE_STR=$(echo "select last_data_update from info;" | mysql -h "$DB_HOST" oncokb_core -u${DB_USERNAME} -p${DB_PASSWORD} | tail -n1);
                echo "Last data update was $LAST_DATA_UPDATE_STR";
                
                if [ -z "$LAST_DATA_UPDATE_STR" ];
                then
                  echo "No last data update available";
                  sleep 60;
                else
                  THRESHOLD=5mins;
                  LAST_DATA_UPDATE_WITH_THRESHOLD=$(date -d "$LAST_DATA_UPDATE_STR today + $THRESHOLD" --utc +%s);
                  CURRENT_DATE=$(date --utc +%s);
                
                  echo "Threshold $THRESHOLD";
                  echo "Comparison with threshold $LAST_DATA_UPDATE_WITH_THRESHOLD -gt $CURRENT_DATE";
                  if [ "$LAST_DATA_UPDATE_WITH_THRESHOLD" -gt "$CURRENT_DATE" ];
                  then
                    kubectl set env deployment oncokb-core --env="LAST_RESTART=$(date)";
                    kubectl set env deployment oncokb-cbx --env="LAST_RESTART=$(date)";
                  else
                    echo "Not data update within $THRESHOLD";
                  fi;
                  echo "Job Done";
                fi

          restartPolicy: Never
      backoffLimit: 5
